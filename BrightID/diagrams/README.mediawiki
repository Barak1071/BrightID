= Connecting with peers =

=== Required entities ===
'''User''' - A brightID user

'''Profile Service''' - A service that provides the channels for exchanging profile data and connection requests.

'''Node API''' - The brightID API is used for actually recording connections on the brightID graph and IDChain

=== Required data ===
'''Channel'''

In order to exchange profile data, first a shared channel needs to be established. A channel is defined through:
* id: A unique identifier for this channel
* profileId: The profileId of the channel initiator
* aesKey: The encryption key used for the data exchanged through the channel

The channel is created by the person initiating the connection process. The channel data is shared peer-to-peer via QR-Code.

'''Profile'''

Once a channel is established, user can share their profile data in the channel. Profile data consists of:
* id: A temporary unique identifier of this profile in the channel
* userdata (encrypted with aesKey of channel)
** id: The users BrightID
** name
** photo

'''Connection request'''

In order to establish a connection a "Add Connection" operation needs to be cryptographically signed by both peers
and sent to the Node API. One user starts this process by sending a connection request to the other user.
The connection request contains:
* profileId of connection initiator
* signed "Add Connection" message
If the receiving user agrees to make the connection, he also signs the "Add connection" message and sends it to the Node
API.

== Connection sequence ==
Multiple participants can communicate and connect simultaneously over the same channel.

Assming a meeting scenario with multiple participants:
* Alice initiates the connection process by creating a channel.
* The channel data is shared via QR-Code with all meeting participants.
* All participants scan the qrcode of Alice, upload their profile encrypted with the channel's aesKey and download all available profiles from the profile server.

Finding connection candidates:
[[File:connecting-find-connections.mmd.svg||finding connection candidates]]

For each peer profile obtained through the channel, an entry is created in the pending connections queue of the client.
The user reviews and confirms/rejects these pending connections individually.

Note that there can exist two types of entries in the pending connection queue:

=== Initiator type ===

Pending connections obtained through getting a list of profiles from channel service are in a 'vanilla' state. In order to start the
connection process with these peers, the user has to '''initiate''' the connection by sending a '''connection request''' to
the candidate.

=== Responder type ===

Pending connections obtained by receiving a connection request are already initiated. The connection request
contains the signed connection intent message by the peer. In order to finalize the connection, the user has to sign the
same connection intent message with his own credentials and submit the connection request to the Node API.

Establishing connections:
[[File:connecting-make-connections.mmd.svg||establishing connections]]

= States and transitions =
=== Pending Connection ===
A connection starts with obtaining a profileID, either directyl via scanning a QRCode, by getting a list of profiles
from a channel or by polling for connection requests.
Before the user is asked for confirmation, the profile data needs to be downloaded.
When profile data is available, the user can confirm or reject a connection.

[[File:pendingConnection_states.mmd.svg||Connection States]]
